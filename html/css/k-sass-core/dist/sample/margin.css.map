{"version":3,"sources":["k-sass-core/dist/sample/margin.sass","k-sass-core/dist/sass/core/mixin/_basic.sass","k-sass-core/dist/sass/core/function/_replace.sass"],"names":[],"mappings":"AASA;EACI,eAAe;ECwBb,wBC9Be;CFOK;;AAE1B;EACI,sCAAsC;EC+BpC,4BCzCe;ED0Cf,2BAAoC;EACpC,+BC3Ce;ED4Cf,eAAmC;CDjCQ;;AAEjD;EACI,gBAAgB;ECkBd,gBAAkC;EAClC,2BCjCe;EDkCf,mBAAqC;EACrC,0BCnCe;CFeM;;AAE3B;EACI,iCAAiC;ECc/B,gBAAkC;EAClC,0CCjCe;EDkCf,mBAAqC;EACrC,yCCnCe;CFmBuB;;AAE5C;EACI,uBAAuB;EChBrB,gBAAkC;EAchC,oBAAqC;CDGX;;AAElC;EACI,iCAAiC;ECpB/B,2BCNe;EDyBb,+BCzBa;ED2Bb,kBAAmC;CDAC;;AAE5C;EACI,8BAA8B;ECxB5B,2BCNe;EDYb,mBAAoC;EAepC,6BC3Ba;CF+BoB","file":"margin.css","sourcesContent":["@import \"../sass/k-sass-core-only\";\n\n///\n/// Default BN-SAS-CORE configuration settings.\n/// @Type: +mar([options]) OR +margin([options])\n/// @:Option: with \"_\" will be compile to !important\n/// @:null: with null to leave the value\n///\n\n.sample-0 {\n    /*+mar(3rem_)*/\n    @include mar(3rem_); }\n\n.sample-1 {\n    /*+mar(2rem_ '0 !important' 3rem_ 0)*/\n    @include mar(2rem_ '0 !important' 3rem_ 0); }\n\n.sample-2 {\n    /*+mar(7px 0_)*/\n    @include mar(7px 0_); }\n\n.sample-3 {\n    /*+mar(5px 'calc(100% - 4px)_')*/\n    @include mar(5px 'calc(100% - 4px)_'); }\n\n.sample-4 {\n    /*+mar(3px null 4rem)*/\n    @include mar(3px null 4rem); }\n\n.sample-5 {\n    /*+margin(1px_ null 0rem_ 4rem)*/\n    @include margin(1px_ null 0rem_ 4rem); }\n\n.sample-6 {\n    /*+mar(7px_ 2rem null 1rem_)*/\n    @include mar(7px_ 2rem null 1rem_); }\n","// BASIC PROPERTIES\n@mixin bn-property($pre, $suf, $values...) {\n  $top: $pre + \"-top\" + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left: $pre + \"-left\" + if($suf, \"-#{$suf}\", \"\");\n  $right: $pre + \"-right\" + if($suf, \"-#{$suf}\", \"\");\n  $all: $pre + if($suf, \"-#{$suf}\", \"\");\n  $values: get_array($values);\n  @if check_list($values) {\n    @if nth($values, 1) {\n      #{$top}: im-rep(#{nth($values, 1)}); }\n    @if length($values) == 1 {\n      @if nth($values, 1) {\n        #{$right}: im-rep(#{nth($values, 1)}); } }\n    @else {\n      @if nth($values, 2) {\n        #{$right}: im-rep(#{nth($values, 2)}); } }\n    @if length($values) == 2 {\n      @if nth($values, 1) {\n        #{$bottom}: im-rep(#{nth($values, 1)}); }\n      @if nth($values, 2) {\n        #{$left}: im-rep(#{nth($values, 2)}); } }\n    @else if length($values) == 3 {\n      @if nth($values, 3) {\n        #{$bottom}: im-rep(#{nth($values, 3)}); }\n      @if nth($values, 2) {\n        #{$left}: im-rep(#{nth($values, 2)}); } }\n    @else if length($values) == 4 {\n      @if nth($values, 3) {\n        #{$bottom}: im-rep(#{nth($values, 3)}); }\n      @if nth($values, 4) {\n        #{$left}: im-rep(#{nth($values, 4)}); } } }\n  @else {\n    @if length($values) == 1 {\n      #{$all}: im-rep(#{$values}); }\n    @else if length($values) == 2 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 1)});\n      #{$left}: im-rep(#{nth($values, 2)}); }\n    @else if length($values) == 3 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 3)}); }\n    @else if length($values) == 4 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 3)});\n      #{$left}: im-rep(#{nth($values, 4)}); } } }\n","// Replace String\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }\n  @return $string; }\n\n@function im-rep($str) {\n  $tmp: str-replace($str, \"_\", \" !important\");\n  @return $tmp; }\n"]}