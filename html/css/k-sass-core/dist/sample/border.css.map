{"version":3,"sources":["k-sass-core/dist/sample/border.sass","k-sass-core/dist/sass/core/mixin/_border.sass","k-sass-core/dist/sass/core/function/_replace.sass"],"names":[],"mappings":"AAQA;EACI,0BAA0B;ECY1B,6BAAwC;CDXP;;AAErC;EACI,4CAA4C;ECU5C,+BAAwD;EACxD,4CCpBiB;EDqBjB,kCAA8D;EAC9D,2CCtBiB;CFUkC;;AAEvD;EACI,oCAAoC;ECWpC,sBAAwD;EACxD,wBAA4D;EAC5D,oCC1BiB;CFc0B;;AAE/C;EACI,sCAAsC;ECWtC,kCAAwD;EACxD,oCAA4D;EAC5D,8CC9BiB;ED+BjB,+CC/BiB;CFkB4B;;AAEjD;EACI,8BAA8B;ECJ9B,2BAAwC;CDKH;;AAEzC;EACI,kCAAkC;ECRlC,yCCjBiB;CF0BwB;;AAE7C;EACI,uCAAuC;ECZvC,iDAAwC;CDaM;;AAElD;EACG,yBAAyB;EChBxB,wCAAwC;CDiBJ","file":"border.css","sourcesContent":["@import \"../sass/k-sass-core-only\";\n\n///\n/// Default BN-SAS-CORE configuration settings.\n/// @Type: +bor([options]) OR +border([options])\n/// @:Option: with \"_\" will be compile to !important\n/// @:null: with null to leave the value\n///\n.sample-0 {\n    /*+bor(null, null, '5%')*/\n    @include bor(null, null, '5%'); }\n\n.sample-1 {\n    /*+bor(null, dashed color(main), 5px 4px_)*/\n    @include bor(null, dashed color(main), 5px 4px_); }\n\n.sample-2 {\n    /*+bor(null, non, 1rem 2rem 3rem_)*/\n    @include bor(null, non, 1rem 2rem 3rem_); }\n\n.sample-3 {\n    /*+bor(null, null, 2px 7px 0_ 3rem_)*/\n    @include bor(null, null, 2px 7px 0_ 3rem_); }\n\n.sample-4 {\n    /*+bor(top, solid #345, 5px)*/\n    @include bor(top, solid #345, 5px); }\n\n.sample-5 {\n    /*+border(bottom, das red, 4px_)*/\n    @include border(bottom, das red, 4px_); }\n\n.sample-6 {\n    /*+bor(left, null, calc(100% - 3rem))*/\n    @include bor(left, null, calc(100% - 3rem)); }\n\n.sample-7 {\n   /*+bor(right, null, 0_)*/\n   @include bor(right, dot black, 0_); }\n\n","// BORDER VARIABLES\n@mixin bn-setborder($pre, $suf, $type, $values...) {\n  $top: $pre + \"-top\" + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left: $pre + \"-left\" + if($suf, \"-#{$suf}\", \"\");\n  $right: $pre + \"-right\" + if($suf, \"-#{$suf}\", \"\");\n  $all: $pre + if($suf, \"-#{$suf}\", \"\");\n  $values: get_array($values);\n  $getborder: solid transparent;\n  @if $type != null {\n    $getborder: str-replace(#{$type}, \"solid\", \"sol\");\n    $getborder: str-replace(#{$getborder}, \"sol\", \"solid\");\n    $getborder: str-replace(#{$getborder}, \"dashed\", \"das\");\n    $getborder: str-replace(#{$getborder}, \"das\", \"dashed\");\n    $getborder: str-replace(#{$getborder}, \"dotted\", \"dot\");\n    $getborder: str-replace(#{$getborder}, \"dot\", \"dotted\");\n    $getborder: str-replace(#{$getborder}, \"double\", \"dou\");\n    $getborder: str-replace(#{$getborder}, \"dou\", \"double\");\n    $getborder: str-replace(#{$getborder}, \"none\", \"non\");\n    $getborder: str-replace(#{$getborder}, \"non\", \"none\"); }\n  @if length($values) == 1 {\n    #{$all}: #{$getborder} im-rep(#{$values}); }\n  @else if length($values) == 2 {\n    #{$pre}-top: #{$getborder} im-rep(#{nth($values, 1)});\n    #{$pre}-right: #{$getborder} im-rep(#{nth($values, 2)});\n    #{$pre}-bottom: #{$getborder} im-rep(#{nth($values, 1)});\n    #{$pre}-left: #{$getborder} im-rep(#{nth($values, 2)}); }\n  @else if length($values) == 3 {\n    #{$pre}-top: #{$getborder} im-rep(#{nth($values, 1)});\n    #{$pre}-right: #{$getborder} im-rep(#{nth($values, 2)});\n    #{$pre}-bottom: #{$getborder} im-rep(#{nth($values, 3)}); }\n  @else if length($values) == 4 {\n    #{$pre}-top: #{$getborder} im-rep(#{nth($values, 1)});\n    #{$pre}-right: #{$getborder} im-rep(#{nth($values, 2)});\n    #{$pre}-bottom: #{$getborder} im-rep(#{nth($values, 3)});\n    #{$pre}-left: #{$getborder} im-rep(#{nth($values, 4)}); } }\n","// Replace String\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }\n  @return $string; }\n\n@function im-rep($str) {\n  $tmp: str-replace($str, \"_\", \" !important\");\n  @return $tmp; }\n"]}