{"version":3,"sources":["k-sass-core/dist/sample/typography.sass","k-sass-core/dist/sass/core/mixin/_image.sass","k-sass-core/dist/sample/typography.css","k-sass-core/dist/sass/core/mixin/_typography.sass","k-sass-core/dist/sass/core/function/_rem.sass","k-sass-core/dist/sass/core/mixin/_prefix.sass","k-sass-core/dist/sass/core/mixin/_position.sass","k-sass-core/dist/sass/core/mixin/_border-radius.sass","k-sass-core/dist/sass/core/mixin/_before-after.sass","k-sass-core/dist/sass/core/function/_replace.sass","k-sass-core/dist/sass/core/mixin/_text-shadow.sass"],"names":[],"mappings":"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","file":"typography.css","sourcesContent":["@import \"../sass/k-sass-core-only\";\n\n///\n/// Default BN-SAS-CORE configuration settings.\n/// @:Option: with \"_\" will be compile to !important\n/// @:null: with null to leave the value\n///\n\n\n.background-1 {\n    @include background-image(\"abc\",null); }\n\n.background-2 {\n    @include background-image(\"abc\",cover); }\n\n.clearfix {\n    /*+clearfix*/\n    @include clearfix; }\n\n.visually-hidden {\n    /*+visually-hidden*/\n    @include visually-hidden; }\n\n.setrem {\n    /*+setrem(20px)*/\n    @include setrem(20px); }\n\n.text-wrap-1 {\n    /*+text-wrap()*/\n    @include text-wrap(); }\n\n.text-wrap-2 {\n    /*+text-wrap(160px, block)*/\n    @include text-wrap(160px, block); }\n\n.set-center {\n    /*+set-center()*/\n    @include set-center(); }\n\n.full-width-1 {\n    /*+vh()*/\n    @include vh(); }\n\n.parent {\n    /*@extend .full-width-1*/\n    /*font-size: 2rem*/\n    @extend .full-width-1;\n    font-size: 2rem; }\n\n.full-width-2 {\n    /*+full-width()*/\n    @include full-width(); }\n\n.columns {\n    /*+columns(3,10)*/\n    @include columns(3,10); }\n\n.text-shadow {\n    /*+text-shadow()*/\n    @include text-shadow(); }\n\n.box-shadow-1 {\n    /*+box-shadow()*/\n    @include box-shadow(); }\n\n.box-shadow-2 {\n    /*+box-shadow(2px 2px 5px rgba(0, 0, 0, 0.4), inset)*/\n    @include box-shadow(2px 2px 5px rgba(0, 0, 0, 0.4), inset); }\n\n.triple-borders {\n    /*+triple-borders(#3C3C3C, #999, #000000, 0)*/\n    @include triple-borders(#3C3C3C, #999, #000000, 0); }\n\n.columns {\n    /*+columns(3,10)*/\n    @include columns(3,10); }\n\n.font-size {\n    /*+fz(2rem)*/\n    @include fz(2rem); }\n\n.font-weight {\n    /*+fw(400)*/\n    @include fw(400); }\n\n.line-height {\n    /*+lh(1.5)*/\n    @include lh(1.5); }\n\n.opacity {\n    /*+opacity(.5)*/\n    @include opacity(.5); }\n\n/*++font-face('ABCFonts', \"../fonts/\", \"myFont\")*/\n@include font-face('ABCFonts', \"../fonts/\", \"myFont\");\n\n.before {\n    /*+before(null, 50% 30px)*/\n    @include before(null, 50% 30px); }\n\n.after {\n    /*+after('*', '50%_' 30px_, inline)*/\n    /*+pos(abs, 0 null null 0)*/\n    @include after('*', '50%_' 30px_, inline);\n    @include pos(abs, 0 null null 0); }\n\n.placeholder {\n    @include placeholder {\n        border: 1px; } }\n\n.selection {\n    @include selection {\n        border: 1px; } }\n\n.get-shadow {\n    font-size: 92px;\n    padding-top: 60px;\n    padding-bottom: 60px;\n    text-align: center;\n    text-transform: uppercase;\n    letter-spacing: .15em;\n    @include elegant-shadow-generator(#767676, 2, 30);\n    @include gettext-shadow(#444); }\n","// IMAGE\n// SVG background images with PNG and retina fallback\n$image-path: '../img' !default;\n$fallback-extension: 'png' !default;\n$retina-suffix: '@2x';\n@mixin background-image($name, $size:false) {\n    background-image: url(#{$image-path}/#{$name}.svg);\n    @if($size) {\n        background-size: $size; }\n    &.no-svg {\n        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});\n        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {\n          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension}); } } }\n\n\n",".background-1 {\n  background-image: url(../img/abc.svg);\n}\n\n.background-1.no-svg {\n  background-image: url(../img/abc.png);\n}\n\n@media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3 / 2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {\n  .background-1.no-svg {\n    background-image: url(../img/abc@2x.png);\n  }\n}\n\n.background-2 {\n  background-image: url(../img/abc.svg);\n  background-size: cover;\n}\n\n.background-2.no-svg {\n  background-image: url(../img/abc.png);\n}\n\n@media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3 / 2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {\n  .background-2.no-svg {\n    background-image: url(../img/abc@2x.png);\n  }\n}\n\n.clearfix {\n  /*+clearfix*/\n  *zoom: 1;\n}\n\n.clearfix:before, .clearfix:after {\n  content: \" \";\n  display: table;\n}\n\n.clearfix:after {\n  clear: both;\n}\n\n.visually-hidden {\n  /*+visually-hidden*/\n  margin: -1px;\n  padding: 0;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  clip: rect(0, 0, 0, 0);\n  position: absolute;\n}\n\n.setrem {\n  /*+setrem(20px)*/\n  font-size: 20px;\n  font-size: 1.25rem;\n}\n\n.text-wrap-1 {\n  /*+text-wrap()*/\n  display: inline-block;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n\n.text-wrap-2 {\n  /*+text-wrap(160px, block)*/\n  display: block;\n  max-width: 160px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n\n.set-center {\n  /*+set-center()*/\n  -webkit-transform: translateX(-50%) translateY(-50%);\n  -khtml-transform: translateX(-50%) translateY(-50%);\n  -moz-transform: translateX(-50%) translateY(-50%);\n  -ms-transform: translateX(-50%) translateY(-50%);\n  -o-transform: translateX(-50%) translateY(-50%);\n  transform: translateX(-50%) translateY(-50%);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n}\n\n.full-width-1, .parent {\n  /*+vh()*/\n  min-width: 100vw;\n  min-height: 100vh;\n}\n\n.parent {\n  /*@extend .full-width-1*/\n  /*font-size: 2rem*/\n  font-size: 2rem;\n}\n\n.full-width-2 {\n  /*+full-width()*/\n  min-width: 100%;\n  min-height: 100%;\n  width: 100%;\n  height: 100%;\n}\n\n.columns {\n  /*+columns(3,10)*/\n  -webkit-column-count: 3;\n  -khtml-column-count: 3;\n  -moz-column-count: 3;\n  -ms-column-count: 3;\n  -o-column-count: 3;\n  column-count: 3;\n  -webkit-column-gap: 10;\n  -khtml-column-gap: 10;\n  -moz-column-gap: 10;\n  -ms-column-gap: 10;\n  -o-column-gap: 10;\n  column-gap: 10;\n}\n\n.text-shadow {\n  /*+text-shadow()*/\n  text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);\n}\n\n.box-shadow-1 {\n  /*+box-shadow()*/\n  -webkit-box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);\n  -khtml-box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);\n  -moz-box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);\n  -ms-box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);\n  -o-box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);\n}\n\n.box-shadow-2 {\n  /*+box-shadow(2px 2px 5px rgba(0, 0, 0, 0.4), inset)*/\n  -webkit-box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.4);\n  -khtml-box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.4);\n  -moz-box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.4);\n  -ms-box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.4);\n  -o-box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.4);\n  box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.4);\n}\n\n.triple-borders {\n  /*+triple-borders(#3C3C3C, #999, #000000, 0)*/\n  border: 1px solid #3C3C3C;\n  border-radius: 0;\n  -webkit-box-shadow: 0 0 0 1px #999, 0 0 0 2px #000000;\n  -khtml-box-shadow: 0 0 0 1px #999, 0 0 0 2px #000000;\n  -moz-box-shadow: 0 0 0 1px #999, 0 0 0 2px #000000;\n  -ms-box-shadow: 0 0 0 1px #999, 0 0 0 2px #000000;\n  -o-box-shadow: 0 0 0 1px #999, 0 0 0 2px #000000;\n  box-shadow: 0 0 0 1px #999, 0 0 0 2px #000000;\n}\n\n.columns {\n  /*+columns(3,10)*/\n  -webkit-column-count: 3;\n  -khtml-column-count: 3;\n  -moz-column-count: 3;\n  -ms-column-count: 3;\n  -o-column-count: 3;\n  column-count: 3;\n  -webkit-column-gap: 10;\n  -khtml-column-gap: 10;\n  -moz-column-gap: 10;\n  -ms-column-gap: 10;\n  -o-column-gap: 10;\n  column-gap: 10;\n}\n\n.font-size {\n  /*+fz(2rem)*/\n  font-size: 2rem;\n}\n\n.font-weight {\n  /*+fw(400)*/\n  font-weight: 400;\n}\n\n.line-height {\n  /*+lh(1.5)*/\n  line-height: 1.5;\n}\n\n.opacity {\n  /*+opacity(.5)*/\n  filter: alpha(opacity=50);\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";\n  -webkit-opacity: 0.5;\n  -khtml-opacity: 0.5;\n  -moz-opacity: 0.5;\n  -ms-opacity: 0.5;\n  -o-opacity: 0.5;\n  opacity: 0.5;\n}\n\n/*++font-face('ABCFonts', \"../fonts/\", \"myFont\")*/\n@font-face {\n  font-family: \"ABCFonts\";\n  src: url(../fonts/myFont.eot);\n  src: url(../fonts/myFont.eot?#iefix) format(\"embedded-opentype\"), url(../fonts/myFont.woff) format(\"woff\"), url(../fonts/myFont.woff2) format(\"woff2\"), url(../fonts/myFont.ttf) format(\"truetype\"), url(../fonts/myFont.svg#ABCFonts) format(\"svg\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n.before {\n  /*+before(null, 50% 30px)*/\n}\n\n.before:before {\n  content: '';\n  display: block;\n  width: 50%;\n  height: 30px;\n}\n\n.after {\n  /*+after('*', '50%_' 30px_, inline)*/\n  /*+pos(abs, 0 null null 0)*/\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.after:after {\n  content: \"*\";\n  display: inline;\n  width: 50% !important;\n  height: 30px !important;\n}\n\n.placeholder::-webkit-input-placeholder {\n  border: 1px;\n}\n\n.placeholder:-moz-placeholder {\n  border: 1px;\n}\n\n.placeholder::-moz-placeholder {\n  border: 1px;\n}\n\n.placeholder:-ms-input-placeholder {\n  border: 1px;\n}\n\n.selection::selection {\n  border: 1px;\n}\n\n.selection:-moz-selection {\n  border: 1px;\n}\n\n.selection::-moz-selection {\n  border: 1px;\n}\n\n.selection:-ms-selection {\n  border: 1px;\n}\n\n.get-shadow {\n  font-size: 92px;\n  padding-top: 60px;\n  padding-bottom: 60px;\n  text-align: center;\n  text-transform: uppercase;\n  letter-spacing: .15em;\n  text-shadow: 1px - 1px 0 #767676, -1px 2px 1px #7a7a7a, -2px 4px 1px #7e7e7e, -3px 6px 1px #828282, -4px 8px 1px #858585, -5px 10px 1px #898989, -6px 12px 1px #8d8d8d, -7px 14px 1px #919191, -8px 16px 1px #959595, -9px 18px 1px #999999, -10px 20px 1px #9d9d9d, -11px 22px 1px #a1a1a1, -12px 24px 1px #a4a4a4, -13px 26px 1px #a8a8a8, -14px 28px 1px #acacac, -15px 30px 1px #b0b0b0, -16px 32px 1px #b4b4b4, -17px 34px 1px #b8b8b8, -18px 36px 1px #bcbcbc, -19px 38px 1px #bfbfbf, -20px 40px 1px #c3c3c3, -21px 42px 1px #c7c7c7, -22px 44px 1px #cbcbcb, -23px 46px 1px #cfcfcf, -24px 48px 1px lightgray, -25px 50px 1px #d7d7d7, -26px 52px 1px #dadada, -27px 54px 1px #dedede, -28px 56px 1px #e2e2e2, -29px 58px 1px #e6e6e6, -30px 60px 1px #eaeaea;\n  text-shadow: -1px 1.1px rgba(74, 74, 74, 0.145) , -2px 2.2px rgba(79, 79, 79, 0.14) , -3px 3.3px rgba(85, 85, 85, 0.135) , -4px 4.4px rgba(90, 90, 90, 0.13) , -5px 5.5px rgba(96, 96, 96, 0.125) , -6px 6.6px rgba(102, 102, 102, 0.12) , -7px 7.7px rgba(107, 107, 107, 0.115) , -8px 8.8px rgba(113, 113, 113, 0.11) , -9px 9.9px rgba(118, 118, 118, 0.105) , -10px 11px rgba(124, 124, 124, 0.1) , -11px 12.1px rgba(130, 130, 130, 0.095) , -12px 13.2px rgba(135, 135, 135, 0.09) , -13px 14.3px rgba(141, 141, 141, 0.085) , -14px 15.4px rgba(147, 147, 147, 0.08) , -15px 16.5px rgba(152, 152, 152, 0.075) , -16px 17.6px rgba(158, 158, 158, 0.07) , -17px 18.7px rgba(163, 163, 163, 0.065) , -18px 19.8px rgba(169, 169, 169, 0.06) , -19px 20.9px rgba(175, 175, 175, 0.055) , -20px 22px rgba(180, 180, 180, 0.05) , -21px 23.1px rgba(186, 186, 186, 0.045) , -22px 24.2px rgba(191, 191, 191, 0.04) , -23px 25.3px rgba(197, 197, 197, 0.035) , -24px 26.4px rgba(203, 203, 203, 0.03) , -25px 27.5px rgba(208, 208, 208, 0.025) , -26px 28.6px rgba(214, 214, 214, 0.02) , -27px 29.7px rgba(219, 219, 219, 0.015) , -28px 30.8px rgba(225, 225, 225, 0.01) , -29px 31.9px rgba(231, 231, 231, 0.005) , -30px 33px rgba(236, 236, 236, 0);\n}\n","// TYPOGRAPHY\n@mixin text-wrap($width: 100%, $display: inline-block) {\n  display: $display;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal; }\n\n// Clearfix\n@mixin clearfix {\n  *zoom: 1;\n  &:before, &:after {\n    content: \" \";\n    display: table; }\n  &:after {\n    clear: both; } }\n// Visually hidden\n@mixin visually-hidden {\n  margin: -1px;\n  padding: 0;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  clip: rect(0, 0, 0, 0);\n  position: absolute; }\n\n// Get Rem\n@mixin setrem($size) {\n  font-size: $size;\n  font-size: calculateRem($size); }\n\n// Fonts\n@mixin font-face($fontFamily: 'myFont', $path: \"../fonts/\", $name: \"myFont\") {\n  @font-face {\n    font-family: '#{$fontFamily}';\n    src: url(#{$path+$name}.eot);\n    src: url(#{$path+$name}.eot?#iefix) format('embedded-opentype'),\n    url(#{$path+$name}.woff) format('woff'),\n    url(#{$path+$name}.woff2) format('woff2'),\n    url(#{$path+$name}.ttf) format('truetype'),\n    url(#{$path+$name}.svg##{$fontFamily}) format('svg') {}\n    font-weight: normal;\n    font-style: normal; } }\n\n// Set Center\n@mixin set-center() {\n  @include transform(translateX(-50%) translateY(-50%));\n  @include pos(abs,50% null null 50%); }\n\n// Set Full Width\n@mixin vh {\n  min-width: 100vw;\n  min-height: 100vh; }\n\n@mixin full-width {\n  min-width: 100%;\n  min-height: 100%;\n  width: 100%;\n  height: 100%; }\n\n\n// Set Padding\n@mixin fz ($fontsize:1rem) {\n  font-size: $fontsize; }\n\n// Set Padding\n@mixin fw ($fontweight:400) {\n  font-weight: $fontweight; }\n\n// Set Padding\n@mixin lh ($lineheight:0) {\n  line-height: $lineheight; }\n\n/// Opacity\n@mixin opacity($opacity: 0.5) {\n  $opacityMultiplied: $opacity * 100;\n  filter: alpha(opacity = $opacityMultiplied);\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=\" + $opacityMultiplied + \")\";\n  @include bn-prefix(\"opacity\", $opacity); }\n\n// Columns\n@mixin columns($count: 3, $gap: 10) {\n  @include bn-prefix(\"column-count\", $count);\n  @include bn-prefix(\"column-gap\", $gap); }\n\n// Text shadow\n@mixin text-shadow($x: 2px 2px 5px rgba(0, 0, 0, 0.4)) {\n  text-shadow: $x; }\n\n// Box shadow\n@mixin box-shadow($x: 2px 2px 5px rgba(0, 0, 0, 0.4), $inset: null) {\n  @if $inset != \"\" {\n    @include bn-prefix(\"box-shadow\", $inset $x ); }\n  @else {\n    @include bn-prefix(\"box-shadow\", $x); } }\n\n/// Triple Borders\n@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {\n  border: 1px solid $colorOne;\n  @include border-radius($radius);\n  @include bn-prefix(\"box-shadow\", \"0 0 0 1px #{$colorTwo}, 0 0 0 2px #{$colorThree}\"); }\n\n// Placeholder\n@mixin placeholder {\n  &::-webkit-input-placeholder {\n    @content; }\n  &:-moz-placeholder {\n    @content; }\n  &::-moz-placeholder {\n    @content; }\n  &:-ms-input-placeholder {\n    @content; } }\n\n// Selection\n@mixin selection {\n  &::selection {\n    @content; }\n  &:-moz-selection {\n    @content; }\n  &::-moz-selection {\n    @content; }\n  &:-ms-selection {\n    @content; } }\n","// Check Rem\n@function calculateRem($size) {\n  $remSize: $size / 16px;\n  @return $remSize * 1rem; }\n","// PREFIX PROPERTIES\n@mixin bn-prefix($property: null, $value: null) {\n  -webkit-#{$property}: #{$value};\n  -khtml-#{$property}: #{$value};\n  -moz-#{$property}: #{$value};\n  -ms-#{$property}: #{$value};\n  -o-#{$property}: #{$value};\n  #{$property}: #{$value}; }\n\n@mixin bn-value-prefixer($property,$value,$prefixes:()) {\n  @each $prefix in $prefixes {\n    #{$property}: #{\"-\" + $prefix + \"-\" + $value}; }\n  #{$property}: $value; }\n","// POSITON VARIABLES\n@mixin bn-setposition($pre, $suf, $values...) {\n  $top:  \"top\";\n  $bottom:  \"bottom\";\n  $left:  \"left\";\n  $right:  \"right\";\n  $all:  $pre;\n  $values: get_array($values);\n  $getborder: initial;\n  @if $suf != null {\n    $getborder: str-replace(#{$suf}, \"relative\", \"rel\");\n    $getborder: str-replace(#{$getborder}, \"rel\", \"relative\");\n    $getborder: str-replace(#{$getborder}, \"absolute\", \"abs\");\n    $getborder: str-replace(#{$getborder}, \"abs\", \"absolute\");\n    $getborder: str-replace(#{$getborder}, \"fixed\", \"fix\");\n    $getborder: str-replace(#{$getborder}, \"fix\", \"fixed\");\n    $getborder: str-replace(#{$getborder}, \"static\", \"sta\");\n    $getborder: str-replace(#{$getborder}, \"sta\", \"static\");\n    $getborder: str-replace(#{$getborder}, \"inherit\", \"inh\");\n    $getborder: str-replace(#{$getborder}, \"non\", \"inherit\"); }\n  #{$all}: #{$getborder};\n  @if length($values) == 1 {\n    #{$top}: im-rep(#{$values}); }\n  @else if length($values) == 2 {\n    #{$top}: im-rep(#{nth($values, 1)});\n    #{$right}: im-rep(#{nth($values, 2)}); }\n  @else if length($values) == 3 {\n    #{$top}: im-rep(#{nth($values, 1)});\n    #{$right}: im-rep(#{nth($values, 2)});\n    #{$bottom}: im-rep(#{nth($values, 3)}); }\n  @else if length($values) == 4 {\n    #{$top}: im-rep(#{nth($values, 1)});\n    #{$right}: im-rep(#{nth($values, 2)});\n    #{$bottom}: im-rep(#{nth($values, 3)});\n    #{$left}: im-rep(#{nth($values, 4)}); } }\n\n","// BASIC PROPERTIES\n@mixin bn-border-radius($pre, $suf, $values...) {\n  $top: $pre + \"-top-left\" + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom-right\" + if($suf, \"-#{$suf}\", \"\");\n  $left: $pre + \"-bottom-left\" + if($suf, \"-#{$suf}\", \"\");\n  $right: $pre + \"-top-right\" + if($suf, \"-#{$suf}\", \"\");\n  $all: $pre + if($suf, \"-#{$suf}\", \"\");\n  $values: get_array($values);\n  @if check_list($values) {\n    @if nth($values, 1) {\n      #{$top}: im-rep(#{nth($values, 1)}); }\n    @if length($values) == 1 {\n      @if nth($values, 1) {\n        #{$right}: im-rep(#{nth($values, 1)}); } }\n    @else {\n      @if nth($values, 2) {\n        #{$right}: im-rep(#{nth($values, 2)}); } }\n    @if length($values) == 2 {\n      @if nth($values, 1) {\n        #{$bottom}: im-rep(#{nth($values, 1)}); }\n      @if nth($values, 2) {\n        #{$left}: im-rep(#{nth($values, 2)}); } }\n    @else if length($values) == 3 {\n      @if nth($values, 3) {\n        #{$bottom}: im-rep(#{nth($values, 3)}); }\n      @if nth($values, 2) {\n        #{$left}: im-rep(#{nth($values, 2)}); } }\n    @else if length($values) == 4 {\n      @if nth($values, 3) {\n        #{$bottom}: im-rep(#{nth($values, 3)}); }\n      @if nth($values, 4) {\n        #{$left}: im-rep(#{nth($values, 4)}); } } }\n  @else {\n    @if length($values) == 1 {\n      #{$all}: im-rep(#{$values}); }\n    @else if length($values) == 2 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 1)});\n      #{$left}: im-rep(#{nth($values, 2)}); }\n    @else if length($values) == 3 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 3)}); }\n    @else if length($values) == 4 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 3)});\n      #{$left}: im-rep(#{nth($values, 4)}); } } }\n","// BEFORE AFTER PROPERTIES\n\n@mixin before($con:'', $values: '100% 100%', $type: null) {\n\t&:before {\n\t\t@if ($con) {\n\t\t\tcontent: $con; }\n\t\t@else {\n\t\t\tcontent: ''; }\n\t\t@if ($type) {\n\t\t\tdisplay: $type; }\n\t\t@else {\n\t\t\tdisplay: block; }\n\t\t@if length($values) == 2 {\n\t\t\twidth: im-rep(#{nth($values, 1)});\n\t\t\theight: im-rep(#{nth($values, 2)}); } } }\n\n@mixin after($con:'', $values: '100% 100%', $type: null) {\n\t&:after {\n\t\t@if ($con) {\n\t\t\tcontent: $con; }\n\t\t@else {\n\t\t\tcontent: ''; }\n\t\t@if ($type) {\n\t\t\tdisplay: $type; }\n\t\t@else {\n\t\t\tdisplay: block; }\n\t\t@if length($values) == 2 {\n\t\t\twidth: im-rep(#{nth($values, 1)});\n\t\t\theight: im-rep(#{nth($values, 2)}); } } }\n","// Replace String\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }\n  @return $string; }\n\n@function im-rep($str) {\n  $tmp: str-replace($str, \"_\", \" !important\");\n  @return $tmp; }\n","@function make-elegant-shadow($base-color: #767676, $scale-factor: 2, $repeat: 30) {\n  $scale: 100% / $repeat / 2.2;\n  //color divider\n  $base-shadow: 1px;\n  $shadow: (#{$base-shadow} - #{$base-shadow}) 0 #{$base-color};\n\n  @for $i from 1 through $repeat {\n    $shadow: #{$shadow}, (-#{$i * $base-shadow}) #{$i * $base-shadow * $scale-factor} #{$base-shadow} #{lighten($base-color, $scale * $i)}; }\n\n  @return $shadow; }\n\n@mixin elegant-shadow-generator($base-color, $scale-factor, $repeat) {\n  text-shadow: make-elegant-shadow($base-color, $scale-factor, $repeat); }\n\n@mixin gettext-shadow($co) {\n  $shadow-color: $co;\n  $offset-y: 1.1px;\n  $offset-x: -1px;\n  $opacity-steps: 0.005;\n  $color-steps: 2.2%;\n\n  // max 100/30\n  $str: null;\n\n  @for $i from 1 through 30 {\n    $str: if($i == 1, $str, $str unquote(\",\"));\n    $str: $str ($i * $offset-x) ($i * $offset-y) rgba(lighten($shadow-color, $i * $color-steps), (30 - $i) * $opacity-steps); }\n\n  text-shadow: $str; }\n\n\n"]}