{"version":3,"sources":["k-sass-core/dist/sample/border-radius.sass","k-sass-core/dist/sass/core/mixin/_border-radius.sass","k-sass-core/dist/sass/core/function/_replace.sass"],"names":[],"mappings":"AAUA;EACI,oBAAoB;ECuBlB,8BC9Be;CFQU;;AAE/B;EACI,qCAAqC;ECqBnC,qCChCe;EDiCf,sDCjCe;EDkCf,yCClCe;EDmCf,wDCnCe;CFY2B;;AAEhD;EACI,mCAAmC;ECTjC,uCCNe;EDYb,wCCZa;ED2Bb,gCAAmC;CDXG;;AAE9C;EACI,wBAAwB;ECbtB,4BAAkC;EAchC,yCCpBa;CFoBe;;AAEpC;EACI,4BAA4B;ECkB1B,4BAAkC;EAClC,2BAAoC;EACpC,gCAAqC;EACrC,0CC5Ce;CFwBkB;;AAEvC;EACI,wCAAwC;ECrBtC,uCCNe;EDyBb,4CCzBa;ED2Bb,gCAAmC;CDCQ;;AAEnD;EACI,mCAAmC;ECzBjC,uCCNe;EDyBb,4CCzBa;ED2Bb,2CC3Ba;CFgCyB","file":"border-radius.css","sourcesContent":["@import \"../sass/k-sass-core-only\";\n\n///\n/// Default BN-SAS-CORE configuration settings.\n/// @Type: +bor-rad([options]) OR +bor-radding([options])\n/// @:Option: with \"_\" will be compile to !important\n/// @:null: with null to leave the value\n///\n\n\n.sample-0 {\n    /*+bor-rad('50%_')*/\n    @include bor-rad('50%_'); }\n\n.sample-1 {\n    /*+bor-rad(0_ 'calc(100% - 12px)_')*/\n    @include bor-rad(0_ 'calc(100% - 12px)_'); }\n\n.sample-2 {\n    /*+bor-rad(7px_ '30%_' null 20px)*/\n    @include bor-rad(7px_ '30%_' null 20px); }\n\n.sample-3 {\n    /*+bor-rad(3px null 0)*/\n    @include bor-rad(3px null 0_); }\n\n.sample-4 {\n    /*+bor-rad(5px 0 2px 4px_)*/\n    @include bor-rad(5px 0 2px 4px_); }\n\n.sample-5 {\n    /*+border-radius(1px_ null 0rem_ 4rem)*/\n    @include border-radius(1px_ null 0rem_ 4rem); }\n\n.sample-6 {\n    /*+bor-rad(7px_ null 2rem_ 1rem_)*/\n    @include bor-rad(7px_ null 2rem_ 1rem_); }\n","// BASIC PROPERTIES\n@mixin bn-border-radius($pre, $suf, $values...) {\n  $top: $pre + \"-top-left\" + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom-right\" + if($suf, \"-#{$suf}\", \"\");\n  $left: $pre + \"-bottom-left\" + if($suf, \"-#{$suf}\", \"\");\n  $right: $pre + \"-top-right\" + if($suf, \"-#{$suf}\", \"\");\n  $all: $pre + if($suf, \"-#{$suf}\", \"\");\n  $values: get_array($values);\n  @if check_list($values) {\n    @if nth($values, 1) {\n      #{$top}: im-rep(#{nth($values, 1)}); }\n    @if length($values) == 1 {\n      @if nth($values, 1) {\n        #{$right}: im-rep(#{nth($values, 1)}); } }\n    @else {\n      @if nth($values, 2) {\n        #{$right}: im-rep(#{nth($values, 2)}); } }\n    @if length($values) == 2 {\n      @if nth($values, 1) {\n        #{$bottom}: im-rep(#{nth($values, 1)}); }\n      @if nth($values, 2) {\n        #{$left}: im-rep(#{nth($values, 2)}); } }\n    @else if length($values) == 3 {\n      @if nth($values, 3) {\n        #{$bottom}: im-rep(#{nth($values, 3)}); }\n      @if nth($values, 2) {\n        #{$left}: im-rep(#{nth($values, 2)}); } }\n    @else if length($values) == 4 {\n      @if nth($values, 3) {\n        #{$bottom}: im-rep(#{nth($values, 3)}); }\n      @if nth($values, 4) {\n        #{$left}: im-rep(#{nth($values, 4)}); } } }\n  @else {\n    @if length($values) == 1 {\n      #{$all}: im-rep(#{$values}); }\n    @else if length($values) == 2 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 1)});\n      #{$left}: im-rep(#{nth($values, 2)}); }\n    @else if length($values) == 3 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 3)}); }\n    @else if length($values) == 4 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 3)});\n      #{$left}: im-rep(#{nth($values, 4)}); } } }\n","// Replace String\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }\n  @return $string; }\n\n@function im-rep($str) {\n  $tmp: str-replace($str, \"_\", \" !important\");\n  @return $tmp; }\n"]}