{"version":3,"sources":["k-sass-core/dist/sample/colors.sass","k-sass-core/dist/sass/core/variables/_variables.sass","k-sass-core/dist/sass/core/function/_colors.sass"],"names":[],"mappings":"AAQA;EACI,sBAAsB;EACtB,0CAA0C;EAC1C,eCVsB;EDWtB,oCEKgB;CFLyB;;AAE7C;EACI,qCAAqC;EACrC,uCAAuC;EACvC,eEMa;EFLb,oBEQY;CFR0B;;AAE1C;EACI,mDAAmD;EACnD,0DAA0D;EAC1D,+BENgB;EFOhB,kCEEY;CFF6C;;AAE7D;EACI,qCAAqC;EACrC,eC3BsB;CD2Bc","file":"colors.css","sourcesContent":["@import \"../sass/k-sass-core-only\";\n\n///\n/// Default BN-SAS-CORE configuration settings.\n/// @:Option: with \"_\" will be compile to !important\n/// @:null: with null to leave the value\n///\n\n.color-1 {\n    /*color: color(main)*/\n    /*background: color-rgba(color(link),.6)*/\n    color: color(main);\n    background: color-rgba(color(link),.6); }\n\n.color-2 {\n    /*color: color-up(color(main), 10%)*/\n    /*background: color-down(#ff3300,20%)*/\n    color: color-up(color(main), 10%);\n    background: color-down(#ff3300,20%); }\n\n.color-3 {\n    /*color: color-rgba(color-up(color(main), 2%),.3)*/\n    /*background: color-down(color-rgba(color(link),.6),20%)*/\n    color: color-rgba(color-up(color(main), 2%),.3);\n    background: color-down(color-rgba(color(link),.6),20%); }\n\n.color-4 {\n    /*color: color-get($bn-colors,main)*/\n    color: color-get($bn-colors,main); }\n","// COLORS\n$bn-colors: (main: #795d9c,link: #607d8b,hover: #ec8b00 ,bg: #2F3242,basic: #e5e5e5,info: #2d7091,success: #659f13,warning: #e28327,danger: #d85030,border: #dfdfdf,turquoise: #1abc9c,green-sea: #16a085,emerald: #2ecc71,nephritis: #27ae60,peter-river: #3498db,belize-hole: #2980b9,amethyst: #9b59b6,wisteria: #8e44ad,wet-ashpalt: #34495e,midnight-blue: #2c3e50,sun-flower: #f1c40f,orange: #f39c12,carrot: #e67e22,pumpkin: #d35400,alizarin: #e74c3c,pomegranate: #c0392b,clouds: #ecf0f1,silver: #bdc3c7,concrete: #95a5a6,asbestos: #7f8c8d,brown: #666666,brown-black: #333333,white: #fff,black: #000);\n\n// FONTS\n$font-stack-helvetica: \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n$font-stack-lucida-grande: \"Lucida Grande\", \"Lucida Sans Unicode\", \"Geneva\", \"Verdana\", sans-serif;\n$font-stack-verdana: \"Verdana\", \"Geneva\", sans-serif;\n$font-stack-system: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n$font-stack-garamond: \"Garamond\", \"Baskerville\", \"Baskerville Old Face\", \"Hoefler Text\", \"Times New Roman\", serif;\n$font-stack-georgia: \"Georgia\", \"Times\", \"Times New Roman\", serif;\n$font-stack-hoefler-text: \"Hoefler Text\", \"Baskerville Old Face\", \"Garamond\", \"Times New Roman\", serif;\n$font-stack-consolas: \"Consolas\", \"monaco\", monospace;\n$font-stack-courier-new: \"Courier New\", \"Courier\", \"Lucida Sans Typewriter\", \"Lucida Typewriter\", monospace;\n$font-stack-monaco: \"monaco\", \"Consolas\", \"Lucida Console\", monospace;\n\n// INPUT\n$bn-inputs-list: (\"[type='color']\",\"[type='date']\",\"[type='datetime']\",\"[type='datetime-local']\",\"[type='email']\",\"[type='month']\",\"[type='number']\",\"[type='password']\",\"[type='search']\",\"[type='tel']\",\"[type='text']\",\"[type='time']\",\"[type='url']\",\"[type='week']\",\"input:not([type])\",\"textarea\");\n$all-input: bn-inputs($bn-inputs-list);\n$all-input-active: bn-inputs($bn-inputs-list, active);\n$all-input-focus: bn-inputs($bn-inputs-list, focus);\n$all-input-hover: bn-inputs($bn-inputs-list, hover);\n$all-input-invalid: bn-inputs($bn-inputs-list, invalid);\n\n// BUTTON\n$bn-buttons-list: (\"button\",\"[type='button']\",\"[type='reset']\",\"[type='submit']\");\n$all-button: bn-inputs($bn-buttons-list);\n$all-button-active: bn-inputs($bn-buttons-list, active);\n$all-button-focus: bn-inputs($bn-buttons-list, focus);\n$all-button-hover: bn-inputs($bn-buttons-list, hover);\n\n","// Colors\n@function color-get($bn-colors, $co) {\n    $mapcolor: map-get($bn-colors, \"#{$co}\");\n    @if ($mapcolor) {\n        @return $mapcolor; }\n    @else {\n        @return white; } }\n\n@function color($co) {\n    $mapcolor: map-get($bn-colors, \"#{$co}\");\n    @if ($mapcolor) {\n        @return $mapcolor; }\n    @else {\n        @return white; } }\n\n@function color-rgba($co: #fff, $o:1) {\n    @if ($co) {\n        @return rgba(red($co),green($co),blue($co),$o); }\n    @else {\n        @return white; } }\n\n// Set color lighten or darken\n@function color-up($co, $amount:0) {\n    $tmp: lighten($co, $amount);\n    @return $tmp; }\n@function color-down($co, $amount:0) {\n    $tmp: darken($co, $amount);\n    @return $tmp; }\n"]}