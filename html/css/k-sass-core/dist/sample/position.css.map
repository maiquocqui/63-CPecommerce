{"version":3,"sources":["k-sass-core/dist/sample/position.sass","k-sass-core/dist/sass/core/mixin/_position.sass","k-sass-core/dist/sass/core/function/_replace.sass"],"names":[],"mappings":"AAQA;EACI,mCAAmC;ECWrC,mBAAS;EAWP,SAAkC;EAClC,WAAoC;EACpC,YAAqC;EACrC,UAAmC;CDxBO;;AAE9C;EACI,wBAAwB;ECO1B,kBAAS;EAIP,SAAkC;EAClC,sBCrBiB;CFUc;;AAEnC;EACI,+BAA+B;ECGjC,kBAAS;EAOP,UAAkC;EAElC,wBCzBiB;CFcqB;;AAE1C;EACI,iCAAiC;ECDnC,kBAAS;EAYP,WAAoC;EACpC,qBC7BiB;ED8BjB,sBC9BiB;CFkBuB;;AAE5C;EACI,oCAAoC;ECLtC,kBAAS;EAWP,SAAkC;EAClC,WAAoC;CDNO;;AAE/C;EACI,6BAA6B;ECT/B,mBAAS;EAEP,oBClBiB;CF0BmB;;AAExC;EACI,iCAAiC;ECbnC,gBAAS;EAWP,UAAkC;EAGlC,QAAmC;CDAK;;AAE5C;EACI,0BAA0B;ECjB5B,gBAAS;EAQP,WAAoC;EACpC,qBCzBiB;CFkCgB","file":"position.css","sourcesContent":["@import \"../sass/k-sass-core-only\";\n\n///\n/// Default BN-SAS-CORE configuration settings.\n/// @Type: +pos([options]) OR +position([options])\n/// @:Option: with \"_\" will be compile to !important\n/// @:null: with null to leave the value\n///\n.sample-0 {\n    /*+pos(relative, 6px 3px 4px 6px)*/\n    @include pos(relative, 6px 3px 4px 6px); }\n\n.sample-1 {\n    /*+pos(null, 5px 4px_)*/\n    @include pos(null, 5px 4px_); }\n\n.sample-2 {\n    /*+pos(null, 1rem null 3rem_)*/\n    @include pos(null, 1rem null 3rem_); }\n\n.sample-3 {\n    /*+pos(null, null 7px 0_ 3rem_)*/\n    @include pos(null, null 7px 0_ 3rem_); }\n\n.sample-4 {\n    /*+pos(initial, 5px 3px null null)*/\n    @include pos(initial, 5px 3px null null); }\n\n.sample-5 {\n    /*+position(absolute, 4px_)*/\n    @include position(absolute, 4px_); }\n\n.sample-6 {\n    /*+pos(fixed, 1rem null null 0)*/\n    @include pos(fixed, 1rem null null 0); }\n\n.sample-7 {\n    /*+pos(fix, null 1px 0_)*/\n    @include pos(fix, null 1px 0_); }\n\n","// POSITON VARIABLES\n@mixin bn-setposition($pre, $suf, $values...) {\n  $top:  \"top\";\n  $bottom:  \"bottom\";\n  $left:  \"left\";\n  $right:  \"right\";\n  $all:  $pre;\n  $values: get_array($values);\n  $getborder: initial;\n  @if $suf != null {\n    $getborder: str-replace(#{$suf}, \"relative\", \"rel\");\n    $getborder: str-replace(#{$getborder}, \"rel\", \"relative\");\n    $getborder: str-replace(#{$getborder}, \"absolute\", \"abs\");\n    $getborder: str-replace(#{$getborder}, \"abs\", \"absolute\");\n    $getborder: str-replace(#{$getborder}, \"fixed\", \"fix\");\n    $getborder: str-replace(#{$getborder}, \"fix\", \"fixed\");\n    $getborder: str-replace(#{$getborder}, \"static\", \"sta\");\n    $getborder: str-replace(#{$getborder}, \"sta\", \"static\");\n    $getborder: str-replace(#{$getborder}, \"inherit\", \"inh\");\n    $getborder: str-replace(#{$getborder}, \"non\", \"inherit\"); }\n  #{$all}: #{$getborder};\n  @if length($values) == 1 {\n    #{$top}: im-rep(#{$values}); }\n  @else if length($values) == 2 {\n    #{$top}: im-rep(#{nth($values, 1)});\n    #{$right}: im-rep(#{nth($values, 2)}); }\n  @else if length($values) == 3 {\n    #{$top}: im-rep(#{nth($values, 1)});\n    #{$right}: im-rep(#{nth($values, 2)});\n    #{$bottom}: im-rep(#{nth($values, 3)}); }\n  @else if length($values) == 4 {\n    #{$top}: im-rep(#{nth($values, 1)});\n    #{$right}: im-rep(#{nth($values, 2)});\n    #{$bottom}: im-rep(#{nth($values, 3)});\n    #{$left}: im-rep(#{nth($values, 4)}); } }\n\n","// Replace String\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }\n  @return $string; }\n\n@function im-rep($str) {\n  $tmp: str-replace($str, \"_\", \" !important\");\n  @return $tmp; }\n"]}