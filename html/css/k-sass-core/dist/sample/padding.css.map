{"version":3,"sources":["k-sass-core/dist/sample/padding.sass","k-sass-core/dist/sass/core/mixin/_basic.sass","k-sass-core/dist/sass/core/function/_replace.sass"],"names":[],"mappings":"AASA;EACI,oBAAoB;EC+BlB,eAAkC;EAClC,4BCtCe;EDuCf,gCCvCe;CFOU;;AAE/B;EACI,2BAA2B;EC+BzB,6BCzCe;ED0Cf,4BC1Ce;ED2Cf,gCC3Ce;ED4Cf,2BC5Ce;CFWiB;;AAEtC;EACI,+BAA+B;EC2B7B,6BCzCe;ED0Cf,8BC1Ce;ED2Cf,gCC3Ce;ED4Cf,6BC5Ce;CFeqB;;AAE1C;EACI,uBAAuB;ECuBrB,0BCzCe;ED0Cf,4BC1Ce;ED2Cf,oBAAqC;EACrC,kBAAmC;CDzBP;;AAElC;EACI,uBAAuB;ECmBrB,iBAAkC;EAClC,4BC1Ce;ED2Cf,6BC3Ce;ED4Cf,kBAAmC;CDrBP;;AAElC;EACI,4BAA4B;ECe1B,kBAAkC;EAClC,oBAAoC;EACpC,6BC3Ce;ED4Cf,2BC5Ce;CF2BmB;;AAExC;EACI,iBAAiB;ECEf,0BChCe;EDiCf,8BCjCe;EDkCf,6BClCe;EDmCf,6BCnCe;CF+BO","file":"padding.css","sourcesContent":["@import \"../sass/k-sass-core-only\";\n\n///\n/// Default BN-SAS-CORE configuration settings.\n/// @Type: +pad([options]) OR +padding([options])\n/// @:Option: with \"_\" will be compile to !important\n/// @:null: with null to leave the value\n///\n\n.sample-0 {\n    /*+pad(0 0_ 3rem_)*/\n    @include pad(0 0_ 3rem_); }\n\n.sample-1 {\n    /*+pad(2rem_ 0_ 3rem_ 0_)*/\n    @include pad(2rem_ 0_ 3rem_ 0_); }\n\n.sample-2 {\n    /*+pad(2rem_ 2px_ 3rem_ 2px_)*/\n    @include pad(2rem_ 2px_ 3rem_ 2px_); }\n\n.sample-3 {\n    /*+pad(0_ 0_ 2px 2px)*/\n    @include pad(0_ 0_ 2px 2px); }\n\n.sample-4 {\n    /*+pad(2px 0_ 0_ 2px)*/\n    @include pad(2px 0_ 0_ 2px); }\n\n.sample-5 {\n    /*+padgin(1rem 1rem 0_ 0_)*/\n    @include padding(1rem 1rem 0_ 0_); }\n\n.sample-6 {\n    /*+pad(0_ 2px_)*/\n    @include pad(0_ 2px_); }\n","// BASIC PROPERTIES\n@mixin bn-property($pre, $suf, $values...) {\n  $top: $pre + \"-top\" + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left: $pre + \"-left\" + if($suf, \"-#{$suf}\", \"\");\n  $right: $pre + \"-right\" + if($suf, \"-#{$suf}\", \"\");\n  $all: $pre + if($suf, \"-#{$suf}\", \"\");\n  $values: get_array($values);\n  @if check_list($values) {\n    @if nth($values, 1) {\n      #{$top}: im-rep(#{nth($values, 1)}); }\n    @if length($values) == 1 {\n      @if nth($values, 1) {\n        #{$right}: im-rep(#{nth($values, 1)}); } }\n    @else {\n      @if nth($values, 2) {\n        #{$right}: im-rep(#{nth($values, 2)}); } }\n    @if length($values) == 2 {\n      @if nth($values, 1) {\n        #{$bottom}: im-rep(#{nth($values, 1)}); }\n      @if nth($values, 2) {\n        #{$left}: im-rep(#{nth($values, 2)}); } }\n    @else if length($values) == 3 {\n      @if nth($values, 3) {\n        #{$bottom}: im-rep(#{nth($values, 3)}); }\n      @if nth($values, 2) {\n        #{$left}: im-rep(#{nth($values, 2)}); } }\n    @else if length($values) == 4 {\n      @if nth($values, 3) {\n        #{$bottom}: im-rep(#{nth($values, 3)}); }\n      @if nth($values, 4) {\n        #{$left}: im-rep(#{nth($values, 4)}); } } }\n  @else {\n    @if length($values) == 1 {\n      #{$all}: im-rep(#{$values}); }\n    @else if length($values) == 2 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 1)});\n      #{$left}: im-rep(#{nth($values, 2)}); }\n    @else if length($values) == 3 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 3)}); }\n    @else if length($values) == 4 {\n      #{$top}: im-rep(#{nth($values, 1)});\n      #{$right}: im-rep(#{nth($values, 2)});\n      #{$bottom}: im-rep(#{nth($values, 3)});\n      #{$left}: im-rep(#{nth($values, 4)}); } } }\n","// Replace String\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }\n  @return $string; }\n\n@function im-rep($str) {\n  $tmp: str-replace($str, \"_\", \" !important\");\n  @return $tmp; }\n"]}